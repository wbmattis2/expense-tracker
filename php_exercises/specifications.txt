PHP Demonstrations
Coded by Benny Mattis.

***Project description***
Showcases seven different tools and features that can be built with basic PHP programming.

***File Descriptions***
index.php 
Starting point from whence the user can navigate to the various exercises.

exercise_1_1.php
A simple calculator than uses PHP add, subtract, multiply or divide two numbers entered by the user and displays the result.
Displays "INF" if the result is infinity; displays "NAN" if the program cannot calculate a numerical result.

exercise_1_2.php
Determines and displays whether a given age (entered by the user) is old enough to vote in the United States (i.e., whether they are 18 years or older).

exercise_1_3.php
Determines and displays the sign of a number entered by the user.
Displays "NAN" if user input is not numeric.

exercise_1_4.php
Measures and displays the length of a string entered by the user.

exercise_1_5.php
Determines and displays grade division based on a given grade percentage entered by the user.
Displays "Invalid Grade" if user input is negative of non-numeric.

exercise_1_6.php
Takes a given phone number entered by the user and formats it into ten digits according to the North American Numbering Plan (NANP).
Displays "Invalid Entry" if user input can not be formatted into a NANP number.
This validator only works for phone numbers with an international country code of 1.

exercise_2_1.php
Calculates and displays the day of the week (Monday, Tuesday, Wednesday, etc.).
Displays "invalid input" if client's data is not parsable.

exercise_2_2.php
Determines and displays the area of a rectangle with width and height provided by user input.
Displays "invalid input" if two numeric dimensions are not provided.

exercise_2_3.php
Displays all numbers between 200 and 250 (inclusive) that are divisible by 4.

exercise_2_4.php
Adds all integers between 0 and 30 (inclusive) and displays the total.

exercise_2_5.php
Displays a 10x10 table with cells numbered from 1-100 (left to right, then top to bottom) in their content.

exercise_2_6.php
Calculates and displays the number of days elapsed between two dates provided by the user.
Displays "invalid input" if two valid dates are not provided.

exercise_2_7.php
Calculates and displays the age of the user based on date of birth provided by the user.
Displays "invalid input" if a valid date of birth is not provided.

exercise_3_1.php
Calculates and displays the number of days in a given number of years, with one year being counted as 365 days.
Displays "invalid input" if input is non-numeric or negative.

exercise_3_2.php
Calculates and displays the number of seconds in a given number of hours and minutes.
Displays "invalid input" if input is non-numeric.

exercise_3_3.php
Removes all vowels from user input.

exercise_3_4.php
Assuming all entered names consist in a capital letter followed by lowercase letters, finds "Bob" within an array of names.
Returns the location of the first appearance of "Bob" within said array, or -1 if "Bob" is not an array element.
User enters the array of names as a comma-separated list.

exercise_3_5.php
Displays the century (e.g. "19th Century") of a given year between 1000-2010 (e.g. "1871"), with the beginning of the 11th century starting in 1001.
Returns "invalid input" if input is non-numeric, non-integer, or out of the specified range (i.e., if the user bypasses built-in form input restrictions).

exercise_3_6.php
Finds the second largest value within an array of numbers.
Returns  value and first location of second largest number within said array, or "invalid input" if a second largest number cannot be found.
User enters the array of names as a comma-separated list.

exercise_3_7.php
Checks whether a given PIN consists of exactly 4 or exactly 6 numeric digits.
Returns TRUE if the PIN validates successfully; returns FALSE otherwise.

specifications.php
Displays the contents of the program specifications document.

assets/php/_header.php
Holds a <header> component for use on all pages displayed to the user.

assets/php/_head.php
Holds a <head> component for use on all pages displayed to the user.

assets/css/styles.css
Adds spacing between elements on all pages displayed to the user. Adds coloring to highlight key elements.

specifications.txt
Describes the function of all files included in the current directory.
